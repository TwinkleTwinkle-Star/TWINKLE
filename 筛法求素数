/*
用筛选法求1——n(1<n<=100)之内的素数

筛选法又称筛法，是求不超过自然数N(N>1)的所有质数的一种方法。
据说是古希腊的埃拉托斯特尼(Eratosthenes，约公元前274～194年）发明的，又称埃拉托斯特尼筛子。

用筛法求素数的基本思想是：
把从1开始的、某一范围内的正整数从小到大顺序排列， 1不是素数，首先把它筛掉。
剩下的数中选择最小的数是素数，然后去掉它的倍数。
依次类推，直到筛子为空时结束。

 具体做法是：先把N个自然数按次序排列起来。
1不是质数，也不是合数，要划去。
第二个数2是质数留下来，而把2后面所有能被2整除的数都划去。
2后面第一个没划去的数是3，把3留下，再把3后面所有能被3整除的数都划去。
3后面第一个没划去的数是5，把5留下，再把5后面所有能被5整除的数都划去。
这样一直做下去，就会把不超过N的全部合数都筛掉，留下的就是不超过N的全部质数。

因为希腊人是把数写在涂腊的板上，每要划去一个数，就在上面记以小点，寻求质数的工作完毕后，
这许多小点就像一个筛子，所以就把埃拉托斯特尼的方法叫做“埃拉托斯特尼筛”，简称“筛法”。
*/
#include<stdio.h>
#include<math.h>
#define N 50    //宏定义，令N=50，如果修改查找范围直接修改N值
int main(void)
{
	int a[100];
	int i,j;
	for(i=1;i<N;i++)   //给数组a[]赋值，使a[0]=1,a[1]=2……
		a[i]=i+1;
	for(i=1;i<N;i++)   //筛法求素数
	{
		if(a[i]==0)
			continue;
		for(j=i+1;j<N;j++)   //筛法求素数，从2开始选择最小的素数，然后去掉它的倍数。
			if(a[j]%a[i]==0)    
				a[j]=0;          //当a[j]被a[i]整除时除去a[j]的值，这里令a[j]=0,后面不输出。这里循环结果a[j]的值为n以内的质数或者0
	}
	for(j=1;j<N;j++)   //j从1开始，除去a[0]=1,因为1既不是质数也不是合数
	{
		if(a[j]!=0)
		printf("%d  ",a[j]);   // 输出a[j]，当a[j]=0时，不输出
	}
	printf("\n");
	return 0;

}
