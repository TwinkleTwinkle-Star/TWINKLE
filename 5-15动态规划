//给定两个字符串，寻找这两个字串之间的最长公共子序列。

#include<stdio.h>
#include<string.h>
char a[101],b[101];
char num[102][102]; //记录中间结果的数组

//动态规划采用二维数组来标识中间计算结果，避免重复的计算来提高效率
void fun(int lena,int lenb){
	int i,j;
    for(i=1;i<=lena;i++){
        for(j=1;j<=lenb;j++){
            if(a[i-1]==b[j-1]){//注意这里的下标是i-1与j-1
                num[i][j]=num[i-1][j-1]+1;
            }
            else{
                num[i][j]=num[i][j-1]>num[i-1][j]?num[i][j-1]:num[i-1][j];
            }
        }
    }
}

int main()
{
	int lena,lenb;
	printf("字符串a,b:");
    scanf("%s%s",&a,&b);//输入字符串
    lena=strlen(a);//获取字符串长度
    lenb=strlen(b);
    memset(num,0,sizeof(num));  //数组赋初值
    fun(lena,lenb);
    printf("最长公共子序列的长度:%d\n",num[lena][lenb]);
    return 0;
}
