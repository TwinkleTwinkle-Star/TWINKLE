/*
求出1000以内前20个不能被2,3,5,7整除的数之和。
*/
#include<stdio.h>
int fun(int n);
int main(void)
{
        printf("1000以内前20个不能被2,3,5,7整除的数之和为：%d\n",fun(20));   //将int fun(int n)函数中的n赋值为20
               
}
//fun函数功能：求出1000以内，前n个不能被2,3,5,7整除的数，求出这些数的和
int  fun(int n)  
{

        int i,j=0,a[20],sum=0;        //前20个不能被2,3,5,7整除的数保存在a数组中，它们的和保存在sum中。
        
		for(i=0;i<1000;i++)       //在1000以内循环查找不能被2,3,5,7整除的数
		{
			
			if((i%2!=0)&&(i%3!=0)&&(i%5!=0)&&(i%7!=0))       //查找不能被2,3,5,7整除的数
			{
				a[j++]=i;           //a[j];j++;
				printf("第%d个数为: ",j);
				printf("%d \n",i);          //输出出1000以内前20个不能被2,3,5,7整除的数
			}
			if(j>n-1)       //当j的大于19时退出循环，即j的值取0，1，2……19
				break;	
		}
		for(i=0;i<n;i++)      //计算1000以内前20个不能被2,3,5,7整除的数之和
			sum+=a[i];
		return sum;       //将sum值返回到主函数中
}
